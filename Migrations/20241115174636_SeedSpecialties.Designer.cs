// <auto-generated />
using System;
using Assessment_JulianFelipeForeroVilla.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Assessment_JulianFelipeForeroVilla.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241115174636_SeedSpecialties")]
    partial class SeedSpecialties
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Assessment_JulianFelipeForeroVilla.Models.Doctor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("first_name");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("gender");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("last_name");

                    b.Property<int>("Office")
                        .HasColumnType("int")
                        .HasColumnName("office");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("password");

                    b.Property<int>("SpecialtyId")
                        .HasColumnType("int")
                        .HasColumnName("specialty_id");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Status");

                    b.Property<int>("specialty_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("specialty_id");

                    b.ToTable("doctors", t =>
                        {
                            t.Property("specialty_id")
                                .HasColumnName("specialty_id1");
                        });
                });

            modelBuilder.Entity("Assessment_JulianFelipeForeroVilla.Models.Mourner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("address");

                    b.Property<int>("Age")
                        .HasColumnType("int")
                        .HasColumnName("age");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_of_birth");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("first_name");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("gender");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("last_name");

                    b.Property<string>("Nationality")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nationality");

                    b.Property<string>("Occupation")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("occupation");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("password");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("phone_number");

                    b.HasKey("Id");

                    b.ToTable("mourners");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "63453 Dashawn Plains",
                            Age = 41,
                            DateOfBirth = new DateTime(1989, 5, 25, 22, 44, 46, 194, DateTimeKind.Local).AddTicks(7341),
                            Email = "Jerrod57@gmail.com",
                            FirstName = "Adriel",
                            Gender = "Other",
                            LastName = "Ryan",
                            Password = "duoaaeau",
                            PhoneNumber = "631.955.1600"
                        },
                        new
                        {
                            Id = 2,
                            Address = "45816 Destinee Throughway",
                            Age = 90,
                            DateOfBirth = new DateTime(1978, 6, 16, 16, 29, 31, 711, DateTimeKind.Local).AddTicks(8161),
                            Email = "Walker_Hartmann@gmail.com",
                            FirstName = "Marlene",
                            Gender = "Female",
                            LastName = "Weissnat",
                            Password = "xeieoaae",
                            PhoneNumber = "511.669.2941 x578"
                        },
                        new
                        {
                            Id = 3,
                            Address = "763 Murl Landing",
                            Age = 26,
                            DateOfBirth = new DateTime(1975, 7, 27, 18, 46, 54, 291, DateTimeKind.Local).AddTicks(2025),
                            Email = "Derick.Rolfson@gmail.com",
                            FirstName = "Alexandria",
                            Gender = "Male",
                            LastName = "Bogisich",
                            Password = "xeauieao",
                            PhoneNumber = "1-424-918-7634 x646"
                        },
                        new
                        {
                            Id = 4,
                            Address = "1039 Janet Plaza",
                            Age = 95,
                            DateOfBirth = new DateTime(1991, 10, 12, 0, 25, 5, 612, DateTimeKind.Local).AddTicks(32),
                            Email = "Hilton_Doyle@hotmail.com",
                            FirstName = "Mitchel",
                            Gender = "Male",
                            LastName = "Paucek",
                            Password = "geauaaoa",
                            PhoneNumber = "236.422.1539"
                        },
                        new
                        {
                            Id = 5,
                            Address = "3534 Vicenta Stream",
                            Age = 69,
                            DateOfBirth = new DateTime(1930, 8, 12, 12, 16, 37, 463, DateTimeKind.Local).AddTicks(9308),
                            Email = "Shaniya14@hotmail.com",
                            FirstName = "Reginald",
                            Gender = "Other",
                            LastName = "Anderson",
                            Password = "siaauuuu",
                            PhoneNumber = "539-947-4563"
                        },
                        new
                        {
                            Id = 6,
                            Address = "28081 Wisozk Pine",
                            Age = 85,
                            DateOfBirth = new DateTime(1957, 4, 7, 7, 17, 24, 24, DateTimeKind.Local).AddTicks(2542),
                            Email = "Lura.Roob0@gmail.com",
                            FirstName = "Adonis",
                            Gender = "Female",
                            LastName = "Donnelly",
                            Password = "joauoeeo",
                            PhoneNumber = "(752) 375-2439 x6876"
                        },
                        new
                        {
                            Id = 7,
                            Address = "4580 Heidenreich Springs",
                            Age = 82,
                            DateOfBirth = new DateTime(2002, 4, 13, 22, 15, 22, 159, DateTimeKind.Local).AddTicks(1079),
                            Email = "Marcellus_Runolfsdottir85@hotmail.com",
                            FirstName = "Britney",
                            Gender = "Female",
                            LastName = "Hintz",
                            Password = "jooaoooo",
                            PhoneNumber = "1-454-343-8873 x83261"
                        },
                        new
                        {
                            Id = 8,
                            Address = "5584 Marge Springs",
                            Age = 68,
                            DateOfBirth = new DateTime(1946, 7, 5, 9, 36, 54, 532, DateTimeKind.Local).AddTicks(6407),
                            Email = "Frederik79@gmail.com",
                            FirstName = "Beulah",
                            Gender = "Male",
                            LastName = "Rippin",
                            Password = "suieoiea",
                            PhoneNumber = "(539) 527-8617"
                        },
                        new
                        {
                            Id = 9,
                            Address = "53462 Harber Inlet",
                            Age = 94,
                            DateOfBirth = new DateTime(2006, 3, 21, 11, 30, 14, 529, DateTimeKind.Local).AddTicks(190),
                            Email = "Vesta_Reynolds16@yahoo.com",
                            FirstName = "Eden",
                            Gender = "Other",
                            LastName = "Nitzsche",
                            Password = "beioauoa",
                            PhoneNumber = "450-860-7485"
                        },
                        new
                        {
                            Id = 10,
                            Address = "4366 Grant Road",
                            Age = 23,
                            DateOfBirth = new DateTime(1989, 8, 19, 3, 38, 14, 98, DateTimeKind.Local).AddTicks(8605),
                            Email = "Abelardo.MacGyver@hotmail.com",
                            FirstName = "Dolores",
                            Gender = "Other",
                            LastName = "Dietrich",
                            Password = "vaiooaia",
                            PhoneNumber = "908.997.3370"
                        });
                });

            modelBuilder.Entity("Assessment_JulianFelipeForeroVilla.Models.Specialty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("specialties");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Specialty focused on heart health and diseases",
                            Name = "Cardiology"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Specialty dealing with disorders of the nervous system",
                            Name = "Neurology"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Specialty for children's health and diseases",
                            Name = "Pediatrics"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Specialty for skin, hair, and nail conditions",
                            Name = "Dermatology"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Specialty for the musculoskeletal system",
                            Name = "Orthopedics"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Specialty for cancer diagnosis and treatment",
                            Name = "Oncology"
                        },
                        new
                        {
                            Id = 7,
                            Description = "Specialty for mental health disorders and treatments",
                            Name = "Psychiatry"
                        },
                        new
                        {
                            Id = 8,
                            Description = "Specialty for female reproductive health",
                            Name = "Gynecology"
                        },
                        new
                        {
                            Id = 9,
                            Description = "Specialty for eye health and vision disorders",
                            Name = "Ophthalmology"
                        },
                        new
                        {
                            Id = 10,
                            Description = "Specialty focused on anesthesia and perioperative care",
                            Name = "Anesthesiology"
                        },
                        new
                        {
                            Id = 11,
                            Description = "Specialty for hormonal disorders and diseases",
                            Name = "Endocrinology"
                        },
                        new
                        {
                            Id = 12,
                            Description = "Specialty for digestive system disorders",
                            Name = "Gastroenterology"
                        },
                        new
                        {
                            Id = 13,
                            Description = "Specialty for urinary tract and male reproductive system",
                            Name = "Urology"
                        },
                        new
                        {
                            Id = 14,
                            Description = "Specialty for lung and respiratory system disorders",
                            Name = "Pulmonology"
                        },
                        new
                        {
                            Id = 15,
                            Description = "Specialty for autoimmune and musculoskeletal diseases",
                            Name = "Rheumatology"
                        });
                });

            modelBuilder.Entity("Assessment_JulianFelipeForeroVilla.Models.Doctor", b =>
                {
                    b.HasOne("Assessment_JulianFelipeForeroVilla.Models.Specialty", "Specialty")
                        .WithMany()
                        .HasForeignKey("specialty_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Specialty");
                });
#pragma warning restore 612, 618
        }
    }
}
