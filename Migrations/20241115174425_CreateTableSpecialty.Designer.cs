// <auto-generated />
using System;
using Assessment_JulianFelipeForeroVilla.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Assessment_JulianFelipeForeroVilla.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241115174425_CreateTableSpecialty")]
    partial class CreateTableSpecialty
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Assessment_JulianFelipeForeroVilla.Models.Doctor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("first_name");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("gender");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("last_name");

                    b.Property<int>("Office")
                        .HasColumnType("int")
                        .HasColumnName("office");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("password");

                    b.Property<int>("SpecialtyId")
                        .HasColumnType("int")
                        .HasColumnName("specialty_id");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Status");

                    b.Property<int>("specialty_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("specialty_id");

                    b.ToTable("doctors", t =>
                        {
                            t.Property("specialty_id")
                                .HasColumnName("specialty_id1");
                        });
                });

            modelBuilder.Entity("Assessment_JulianFelipeForeroVilla.Models.Mourner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("address");

                    b.Property<int>("Age")
                        .HasColumnType("int")
                        .HasColumnName("age");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_of_birth");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("first_name");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("gender");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("last_name");

                    b.Property<string>("Nationality")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nationality");

                    b.Property<string>("Occupation")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("occupation");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("password");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("phone_number");

                    b.HasKey("Id");

                    b.ToTable("mourners");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "7831 Willow Path",
                            Age = 39,
                            DateOfBirth = new DateTime(1949, 6, 12, 12, 12, 53, 859, DateTimeKind.Local).AddTicks(1533),
                            Email = "Keanu85@yahoo.com",
                            FirstName = "Selina",
                            Gender = "Male",
                            LastName = "Nolan",
                            Password = "lauaueia",
                            PhoneNumber = "356.524.8605 x0226"
                        },
                        new
                        {
                            Id = 2,
                            Address = "2465 Bernie Tunnel",
                            Age = 58,
                            DateOfBirth = new DateTime(1984, 7, 30, 4, 9, 20, 326, DateTimeKind.Local).AddTicks(1345),
                            Email = "Meghan.Marquardt@hotmail.com",
                            FirstName = "Candace",
                            Gender = "Other",
                            LastName = "Torphy",
                            Password = "muuioeau",
                            PhoneNumber = "307.208.6907 x8228"
                        },
                        new
                        {
                            Id = 3,
                            Address = "68881 Koepp Extensions",
                            Age = 35,
                            DateOfBirth = new DateTime(1929, 2, 20, 12, 56, 43, 715, DateTimeKind.Local).AddTicks(9374),
                            Email = "Dolores_Becker68@yahoo.com",
                            FirstName = "Eloise",
                            Gender = "Other",
                            LastName = "Runolfsson",
                            Password = "keioaeoa",
                            PhoneNumber = "473.408.0067"
                        },
                        new
                        {
                            Id = 4,
                            Address = "677 Estevan Roads",
                            Age = 88,
                            DateOfBirth = new DateTime(1957, 6, 29, 8, 31, 22, 885, DateTimeKind.Local).AddTicks(2765),
                            Email = "Maggie.Wisoky@gmail.com",
                            FirstName = "Dorthy",
                            Gender = "Female",
                            LastName = "Hilll",
                            Password = "paauuiao",
                            PhoneNumber = "986-291-3715 x25989"
                        },
                        new
                        {
                            Id = 5,
                            Address = "39985 Tracey Hills",
                            Age = 49,
                            DateOfBirth = new DateTime(1945, 5, 12, 7, 9, 50, 667, DateTimeKind.Local).AddTicks(9881),
                            Email = "Fanny.Collier@yahoo.com",
                            FirstName = "Joana",
                            Gender = "Other",
                            LastName = "Bode",
                            Password = "suoaeieo",
                            PhoneNumber = "490.475.4782 x08077"
                        },
                        new
                        {
                            Id = 6,
                            Address = "89203 Homenick Centers",
                            Age = 76,
                            DateOfBirth = new DateTime(2003, 3, 14, 1, 33, 0, 160, DateTimeKind.Local).AddTicks(1007),
                            Email = "Brent.Green@yahoo.com",
                            FirstName = "Elroy",
                            Gender = "Female",
                            LastName = "Jacobs",
                            Password = "cuoeaeaa",
                            PhoneNumber = "1-486-591-3424"
                        },
                        new
                        {
                            Id = 7,
                            Address = "1389 Rex Rest",
                            Age = 41,
                            DateOfBirth = new DateTime(1983, 4, 8, 9, 4, 2, 319, DateTimeKind.Local).AddTicks(1397),
                            Email = "Marcelina.Durgan67@hotmail.com",
                            FirstName = "Roel",
                            Gender = "Male",
                            LastName = "Witting",
                            Password = "cieiiaeo",
                            PhoneNumber = "(243) 678-1115 x5147"
                        },
                        new
                        {
                            Id = 8,
                            Address = "71450 McLaughlin Burgs",
                            Age = 49,
                            DateOfBirth = new DateTime(1933, 2, 9, 6, 17, 1, 301, DateTimeKind.Local).AddTicks(1879),
                            Email = "Leon81@hotmail.com",
                            FirstName = "Rubie",
                            Gender = "Female",
                            LastName = "Zieme",
                            Password = "raiieaao",
                            PhoneNumber = "(877) 943-7111"
                        },
                        new
                        {
                            Id = 9,
                            Address = "8749 Frances Light",
                            Age = 67,
                            DateOfBirth = new DateTime(1965, 1, 1, 22, 54, 30, 533, DateTimeKind.Local).AddTicks(944),
                            Email = "Kurtis.Carter@hotmail.com",
                            FirstName = "Florence",
                            Gender = "Other",
                            LastName = "Nienow",
                            Password = "foiauouo",
                            PhoneNumber = "1-941-467-2051 x4032"
                        },
                        new
                        {
                            Id = 10,
                            Address = "7776 Klein Underpass",
                            Age = 90,
                            DateOfBirth = new DateTime(1939, 4, 24, 16, 11, 41, 858, DateTimeKind.Local).AddTicks(9176),
                            Email = "Sigmund.Emard97@gmail.com",
                            FirstName = "Bryana",
                            Gender = "Other",
                            LastName = "Larson",
                            Password = "riaooeeo",
                            PhoneNumber = "(287) 320-9347 x972"
                        });
                });

            modelBuilder.Entity("Assessment_JulianFelipeForeroVilla.Models.Specialty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("specialties");
                });

            modelBuilder.Entity("Assessment_JulianFelipeForeroVilla.Models.Doctor", b =>
                {
                    b.HasOne("Assessment_JulianFelipeForeroVilla.Models.Specialty", "Specialty")
                        .WithMany()
                        .HasForeignKey("specialty_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Specialty");
                });
#pragma warning restore 612, 618
        }
    }
}
