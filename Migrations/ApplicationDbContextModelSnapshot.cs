// <auto-generated />
using System;
using Assessment_JulianFelipeForeroVilla.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Assessment_JulianFelipeForeroVilla.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Assessment_JulianFelipeForeroVilla.Models.Doctor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("first_name");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("gender");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("last_name");

                    b.Property<int>("Office")
                        .HasColumnType("int")
                        .HasColumnName("office");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("password");

                    b.Property<int>("SpecialtyId")
                        .HasColumnType("int")
                        .HasColumnName("specialty_id");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Status");

                    b.Property<int>("specialty_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("specialty_id");

                    b.ToTable("doctors", t =>
                        {
                            t.Property("specialty_id")
                                .HasColumnName("specialty_id1");
                        });
                });

            modelBuilder.Entity("Assessment_JulianFelipeForeroVilla.Models.Mourner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("address");

                    b.Property<int>("Age")
                        .HasColumnType("int")
                        .HasColumnName("age");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_of_birth");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("first_name");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("gender");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("last_name");

                    b.Property<string>("Nationality")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nationality");

                    b.Property<string>("Occupation")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("occupation");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("password");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("phone_number");

                    b.HasKey("Id");

                    b.ToTable("mourners");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "694 Tillman Mission",
                            Age = 51,
                            DateOfBirth = new DateTime(1960, 11, 29, 10, 52, 35, 419, DateTimeKind.Local).AddTicks(3734),
                            Email = "Elwin_Abernathy@hotmail.com",
                            FirstName = "Kaelyn",
                            Gender = "Other",
                            LastName = "Hammes",
                            Password = "niuuiaou",
                            PhoneNumber = "324-533-8601 x273"
                        },
                        new
                        {
                            Id = 2,
                            Address = "2042 Buster Shoal",
                            Age = 83,
                            DateOfBirth = new DateTime(1958, 8, 10, 7, 30, 23, 758, DateTimeKind.Local).AddTicks(2976),
                            Email = "Felix_Kerluke83@yahoo.com",
                            FirstName = "Ena",
                            Gender = "Other",
                            LastName = "Johnston",
                            Password = "geiiueiu",
                            PhoneNumber = "890-752-5368"
                        },
                        new
                        {
                            Id = 3,
                            Address = "1381 Sipes Mews",
                            Age = 61,
                            DateOfBirth = new DateTime(1934, 12, 25, 9, 58, 46, 271, DateTimeKind.Local).AddTicks(8006),
                            Email = "Cary_Kerluke99@gmail.com",
                            FirstName = "Andreanne",
                            Gender = "Male",
                            LastName = "King",
                            Password = "quiueoou",
                            PhoneNumber = "465.796.1952 x14151"
                        },
                        new
                        {
                            Id = 4,
                            Address = "026 Constance Circles",
                            Age = 54,
                            DateOfBirth = new DateTime(1973, 5, 7, 15, 0, 6, 150, DateTimeKind.Local).AddTicks(5915),
                            Email = "Elias_Hamill81@hotmail.com",
                            FirstName = "Domingo",
                            Gender = "Other",
                            LastName = "Gerlach",
                            Password = "qiuuaaao",
                            PhoneNumber = "238.500.8677 x69049"
                        },
                        new
                        {
                            Id = 5,
                            Address = "62869 Emory Mount",
                            Age = 74,
                            DateOfBirth = new DateTime(1930, 2, 19, 8, 12, 48, 93, DateTimeKind.Local).AddTicks(2248),
                            Email = "Floy27@yahoo.com",
                            FirstName = "Shea",
                            Gender = "Male",
                            LastName = "Botsford",
                            Password = "yieeaeeo",
                            PhoneNumber = "998-689-2252"
                        },
                        new
                        {
                            Id = 6,
                            Address = "8337 Brycen Loop",
                            Age = 91,
                            DateOfBirth = new DateTime(2004, 8, 1, 22, 29, 23, 685, DateTimeKind.Local).AddTicks(9214),
                            Email = "Durward.McLaughlin@gmail.com",
                            FirstName = "Madie",
                            Gender = "Female",
                            LastName = "Monahan",
                            Password = "ceieeuae",
                            PhoneNumber = "896-899-5034 x30967"
                        },
                        new
                        {
                            Id = 7,
                            Address = "0767 Roel Club",
                            Age = 33,
                            DateOfBirth = new DateTime(1940, 4, 15, 5, 34, 1, 727, DateTimeKind.Local).AddTicks(1214),
                            Email = "Johnnie.Grimes95@hotmail.com",
                            FirstName = "Travon",
                            Gender = "Female",
                            LastName = "Bode",
                            Password = "zeaiiiie",
                            PhoneNumber = "(674) 831-3146 x650"
                        },
                        new
                        {
                            Id = 8,
                            Address = "5520 Bayer Manors",
                            Age = 87,
                            DateOfBirth = new DateTime(1996, 6, 28, 7, 42, 11, 953, DateTimeKind.Local).AddTicks(38),
                            Email = "Joyce_Schoen40@gmail.com",
                            FirstName = "Stephanie",
                            Gender = "Female",
                            LastName = "Wunsch",
                            Password = "loaiuiui",
                            PhoneNumber = "524.742.7021 x864"
                        },
                        new
                        {
                            Id = 9,
                            Address = "00616 Schmeler Keys",
                            Age = 68,
                            DateOfBirth = new DateTime(1959, 10, 20, 3, 23, 26, 549, DateTimeKind.Local).AddTicks(3982),
                            Email = "Orion75@gmail.com",
                            FirstName = "Buford",
                            Gender = "Female",
                            LastName = "Kuvalis",
                            Password = "nooeooua",
                            PhoneNumber = "281-441-0419 x2804"
                        },
                        new
                        {
                            Id = 10,
                            Address = "0441 Cassin Fords",
                            Age = 98,
                            DateOfBirth = new DateTime(2002, 1, 14, 7, 19, 10, 884, DateTimeKind.Local).AddTicks(4722),
                            Email = "Odie.Bayer@hotmail.com",
                            FirstName = "Bonita",
                            Gender = "Female",
                            LastName = "Morissette",
                            Password = "fueaueoo",
                            PhoneNumber = "1-952-282-7462"
                        });
                });

            modelBuilder.Entity("Assessment_JulianFelipeForeroVilla.Models.Specialty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("specialties");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Specialty focused on heart health and diseases",
                            Name = "Cardiology"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Specialty dealing with disorders of the nervous system",
                            Name = "Neurology"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Specialty for children's health and diseases",
                            Name = "Pediatrics"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Specialty for skin, hair, and nail conditions",
                            Name = "Dermatology"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Specialty for the musculoskeletal system",
                            Name = "Orthopedics"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Specialty for cancer diagnosis and treatment",
                            Name = "Oncology"
                        },
                        new
                        {
                            Id = 7,
                            Description = "Specialty for mental health disorders and treatments",
                            Name = "Psychiatry"
                        },
                        new
                        {
                            Id = 8,
                            Description = "Specialty for female reproductive health",
                            Name = "Gynecology"
                        },
                        new
                        {
                            Id = 9,
                            Description = "Specialty for eye health and vision disorders",
                            Name = "Ophthalmology"
                        },
                        new
                        {
                            Id = 10,
                            Description = "Specialty focused on anesthesia and perioperative care",
                            Name = "Anesthesiology"
                        },
                        new
                        {
                            Id = 11,
                            Description = "Specialty for hormonal disorders and diseases",
                            Name = "Endocrinology"
                        },
                        new
                        {
                            Id = 12,
                            Description = "Specialty for digestive system disorders",
                            Name = "Gastroenterology"
                        },
                        new
                        {
                            Id = 13,
                            Description = "Specialty for urinary tract and male reproductive system",
                            Name = "Urology"
                        },
                        new
                        {
                            Id = 14,
                            Description = "Specialty for lung and respiratory system disorders",
                            Name = "Pulmonology"
                        },
                        new
                        {
                            Id = 15,
                            Description = "Specialty for autoimmune and musculoskeletal diseases",
                            Name = "Rheumatology"
                        });
                });

            modelBuilder.Entity("Assessment_JulianFelipeForeroVilla.Models.Doctor", b =>
                {
                    b.HasOne("Assessment_JulianFelipeForeroVilla.Models.Specialty", "Specialty")
                        .WithMany()
                        .HasForeignKey("specialty_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Specialty");
                });
#pragma warning restore 612, 618
        }
    }
}
