// <auto-generated />
using System;
using Assessment_JulianFelipeForeroVilla.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Assessment_JulianFelipeForeroVilla.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241115172752_CreateTableSpecialty")]
    partial class CreateTableSpecialty
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Assessment_JulianFelipeForeroVilla.Models.Doctor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("first_name");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("gender");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("last_name");

                    b.Property<int>("Office")
                        .HasColumnType("int")
                        .HasColumnName("office");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("password");

                    b.Property<int>("SpecialtyId")
                        .HasColumnType("int")
                        .HasColumnName("specialty_id");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Status");

                    b.Property<int>("specialty_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("specialty_id");

                    b.ToTable("doctors", t =>
                        {
                            t.Property("specialty_id")
                                .HasColumnName("specialty_id1");
                        });
                });

            modelBuilder.Entity("Assessment_JulianFelipeForeroVilla.Models.Mourner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("address");

                    b.Property<int>("Age")
                        .HasColumnType("int")
                        .HasColumnName("age");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_of_birth");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("first_name");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("gender");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("last_name");

                    b.Property<string>("Nationality")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nationality");

                    b.Property<string>("Occupation")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("occupation");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("password");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("phone_number");

                    b.HasKey("Id");

                    b.ToTable("mourners");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "0139 Konopelski Turnpike",
                            Age = 38,
                            DateOfBirth = new DateTime(1956, 5, 8, 18, 4, 12, 469, DateTimeKind.Local).AddTicks(9249),
                            Email = "Maye.Schoen25@yahoo.com",
                            FirstName = "Stacey",
                            Gender = "Other",
                            LastName = "Toy",
                            Password = "veaiiooo",
                            PhoneNumber = "446-476-8517"
                        },
                        new
                        {
                            Id = 2,
                            Address = "031 Zoie Pines",
                            Age = 28,
                            DateOfBirth = new DateTime(1958, 4, 23, 17, 43, 14, 887, DateTimeKind.Local).AddTicks(5275),
                            Email = "Nikita33@gmail.com",
                            FirstName = "Hank",
                            Gender = "Male",
                            LastName = "Rutherford",
                            Password = "zaoaeuua",
                            PhoneNumber = "652-489-1306 x749"
                        },
                        new
                        {
                            Id = 3,
                            Address = "2064 Wunsch Road",
                            Age = 24,
                            DateOfBirth = new DateTime(1953, 12, 17, 12, 32, 19, 806, DateTimeKind.Local).AddTicks(3147),
                            Email = "Mathias_Conroy55@hotmail.com",
                            FirstName = "Alberto",
                            Gender = "Female",
                            LastName = "Kub",
                            Password = "cuooiuia",
                            PhoneNumber = "257-547-1923"
                        },
                        new
                        {
                            Id = 4,
                            Address = "8457 Kristian Village",
                            Age = 93,
                            DateOfBirth = new DateTime(1943, 9, 29, 5, 25, 37, 233, DateTimeKind.Local).AddTicks(4202),
                            Email = "Julien_Mayert99@hotmail.com",
                            FirstName = "Everette",
                            Gender = "Male",
                            LastName = "Lebsack",
                            Password = "riooeioa",
                            PhoneNumber = "330-491-2873 x107"
                        },
                        new
                        {
                            Id = 5,
                            Address = "7944 Dayna Via",
                            Age = 22,
                            DateOfBirth = new DateTime(1931, 7, 29, 5, 37, 28, 804, DateTimeKind.Local).AddTicks(2813),
                            Email = "Olaf.Brown@hotmail.com",
                            FirstName = "Carmen",
                            Gender = "Male",
                            LastName = "Nader",
                            Password = "woiuuaie",
                            PhoneNumber = "813.311.2074 x60398"
                        },
                        new
                        {
                            Id = 6,
                            Address = "6938 Sincere Circles",
                            Age = 68,
                            DateOfBirth = new DateTime(1942, 12, 1, 21, 43, 41, 706, DateTimeKind.Local).AddTicks(2977),
                            Email = "Paxton_Brown56@hotmail.com",
                            FirstName = "Velma",
                            Gender = "Other",
                            LastName = "Halvorson",
                            Password = "rueeooue",
                            PhoneNumber = "629-439-8091 x030"
                        },
                        new
                        {
                            Id = 7,
                            Address = "7856 Sabryna Vista",
                            Age = 99,
                            DateOfBirth = new DateTime(1950, 3, 11, 10, 24, 24, 877, DateTimeKind.Local).AddTicks(2229),
                            Email = "Josie.VonRueden@gmail.com",
                            FirstName = "Rosemarie",
                            Gender = "Female",
                            LastName = "Kemmer",
                            Password = "tiiieiio",
                            PhoneNumber = "294.884.1718 x071"
                        },
                        new
                        {
                            Id = 8,
                            Address = "3912 Crooks Green",
                            Age = 46,
                            DateOfBirth = new DateTime(1994, 1, 4, 0, 20, 26, 208, DateTimeKind.Local).AddTicks(9872),
                            Email = "Kacey_Bednar@hotmail.com",
                            FirstName = "Rylan",
                            Gender = "Other",
                            LastName = "Bartell",
                            Password = "deuieuio",
                            PhoneNumber = "1-320-451-4113"
                        },
                        new
                        {
                            Id = 9,
                            Address = "481 Gustave Lodge",
                            Age = 97,
                            DateOfBirth = new DateTime(2000, 8, 23, 12, 17, 36, 866, DateTimeKind.Local).AddTicks(8367),
                            Email = "Jared_Hessel@yahoo.com",
                            FirstName = "Elza",
                            Gender = "Male",
                            LastName = "Heaney",
                            Password = "qieeouue",
                            PhoneNumber = "916-976-0779"
                        },
                        new
                        {
                            Id = 10,
                            Address = "0467 Bonita Plain",
                            Age = 64,
                            DateOfBirth = new DateTime(1940, 4, 10, 15, 15, 56, 906, DateTimeKind.Local).AddTicks(870),
                            Email = "Oswaldo.OConner83@gmail.com",
                            FirstName = "Efren",
                            Gender = "Other",
                            LastName = "Mitchell",
                            Password = "caoeeiio",
                            PhoneNumber = "241-745-7658"
                        });
                });

            modelBuilder.Entity("Assessment_JulianFelipeForeroVilla.Models.Specialty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("specialties");
                });

            modelBuilder.Entity("Assessment_JulianFelipeForeroVilla.Models.Doctor", b =>
                {
                    b.HasOne("Assessment_JulianFelipeForeroVilla.Models.Specialty", "Specialty")
                        .WithMany()
                        .HasForeignKey("specialty_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Specialty");
                });
#pragma warning restore 612, 618
        }
    }
}
